---
title: "Palindromes"
description: |
  Full text analysis of single-word palindromes in the English language
author: Nikhil Shah
date: February 28, 2025
format: html
---

# Data

The dataset is English Words by [dwyl (Github)](https://github.com/dwyl/english-words/blob/master/words.txt). It contains almost all of the words in the English dictionary

```{r}
#| label: Libraries and Data
#| include: false

library(tidyverse)
library(stringi)

words <- read.csv("data/words.csv")
```

It also contains many things that are decidedly not words.

| category     | example     | thing to filter out |
|--------------|-------------|---------------------|
| has number   | 1080        | digits              |
| has symbol   | A&P         | symbols             |
| proper noun  | Abdul       | capitals            |
| initialism   | A.I.        | capitals, periods   |
| contractions | aren't      | apostrophes         |
| possessives  | abbot's     | apostrophes         |
| compounds    | able-bodied | hyphens             |

I ended up filtering out any word that doesn't have a vowel from the list of palindromes as well. While there are some vowel-less words that are valid words, it's hard to argue that "m" or "tgt" or "xxx" are among them.

```{r}
words_filtered <- words |>
  rename('word' = X2) |>
  filter(!str_detect(word, '[[:upper:][:punct:]\\d]')) |>
  mutate(length = str_length(word)) |>
  mutate(start= str_sub(word, 1, 1))
  
sample_n(words_filtered, 10)
```

# Palindromes

A palindrome is any word (or set of words) that is the same when the letters are reversed.

```{r}
#| label: Palindromes

palindromes <- words_filtered |>
  filter(word == stri_reverse(word)) |>
  filter(str_detect(word, '[aeiouy]'))

sample_n(palindromes, 10)
```

A lot of palindromes are formed because of common suffixes. 'Deified', 'reviver', and 'stats'  might be palindromes, but only because of a modifier that changes the root word. This shows how many words follow those structures.

```{r}
#| label: Suffixes
#| eval: false

palindromes <- palindromes |>
  mutate(suffix = ifelse(str_detect(word, "\\b(de|re|ro|s)\\w+(ed|er|or|s)\\b"), 'Yes', 'No'))

palindromes |>
  ggplot(aes(fill = suffix, x = length)) +
  geom_bar() +
  labs(
    x = 'Word Length',
    y = '# of Palindromes',
    title = 'Single-Word Palindromes in English'
  )
```


# Anti-Palindromes, or Reduplications

While trying to work out a way to find palindromes with stringr functions (apparently R does not have reverse indexing like Python does so this is either not possible or very convoluted) I accidentally came up with a list of "anti-palindromes", where the back half of the word is also the front half of the word. If "toot" is a palindrome, "toto" is an anti-palindrome.

```{r}
#| label: Reduplications

reduplications <- words_filtered |> 
  filter(str_sub(word, 1, floor(str_length(word)/2)) == str_sub(word, -ceiling(str_length(word)/2), -1))

words_letters <- words_filtered |>
  group_by(start) |>
  summarize(count_total = n()) |>
  mutate("All English Words" = count_total/sum(count_total)*100)

reduplication_letters <- reduplications |>
  group_by(start) |>
  summarize(count_red = n()) |>
  mutate("Anti-Palindromes" = count_red/sum(count_red)*100)

letters <- words_letters |>
  left_join(reduplication_letters)

letters_long <- letters |>
  pivot_longer(cols = c("All English Words", "Anti-Palindromes"), names_to = 'dictionary', values_to = 'percent') 

letters_long |>
  ggplot(aes(fill = dictionary, x = start, y = percent)) +
  geom_bar(position = 'dodge', stat = 'identity') +
  labs(
    x = 'Letter',
    y = 'Frequency (%)',
    title = 'Starting Letters of Anti-Palindromes'
  )

```

Interestingly, a lot of these anti-palindromes, or reduplications, start with uncommon letters. This could because many of those letters are emphatic consonant sounds that sound more interesting when repeated. Examples include beriberi, yoyo, and pompom.
